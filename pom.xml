<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.appspot.roovemore.converter</groupId>
  <artifactId>roovemore-converter</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>roovemore-converter</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <!-- ローカル用成果物置場定義 for github-maven-repo-->
  <distributionManagement>
    <repository>
        <id>internal.repos</id>
        <name>Temporary Staging Repository</name>
        <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>

	<!-- githubのmavenリポジトリにアップする設定 for github-maven-repo-->
	<build>
	  <plugins>
	    <plugin>
	      <groupId>com.github.github</groupId>
	      <artifactId>site-maven-plugin</artifactId>
	      <version>0.10</version>
	      <configuration>
	        <!-- settings.xmlのserverに事前にユーザ情報を設定しidはgithubとする -->
	        <server>github</server>
	        <!-- git push時のコミットコメント -->
	        <message>Maven artifacts for ${project.version}</message>
	        <noJekyll>true</noJekyll>
	        <!-- 事前に成果物をデプロイした場所から吸い上げ、github側に反映するイメージ -->
	        <!-- 基本的にはmaven-deploy-plugin or distributionManagement にて配備したディレクトリと合わせる -->
	        <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
	        <!-- この場合ブランチ名は、mvn-repo。もしgit上でこのブランチがなくてもエラーとならず、このブランチを生成してくれる -->
	        <branch>refs/heads/mvn-repo</branch>
	        <includes><include>**/*</include></includes>
	        <!-- 最終的に他プロジェクトでdependencyする際は repositoryName、repositoryOwnerを組立URLとしている？-->
	        <repositoryName>${project.artifactId}</repositoryName>
	        <repositoryOwner>roovesmart</repositoryOwner>
	      </configuration>
	      <executions>
	        <execution>
	          <goals>
	            <goal>site</goal>
	          </goals>
	          <phase>deploy</phase>
	        </execution>
	      </executions>
	    </plugin>
	  </plugins>
	</build>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>



</project>
